{"version":3,"sources":["../../../../telemetry/trace/report/index.ts"],"sourcesContent":["import { TARGET, SpanId } from '../shared'\nimport reportToConsole from './to-console'\nimport reportToZipkin from './to-zipkin'\nimport reportToTelemetry from './to-telemetry'\n\ntype Reporter = (\n  spanName: string,\n  duration: number,\n  timestamp: number,\n  id: SpanId,\n  parentId?: SpanId,\n  attrs?: Object\n) => void\n\nconst target =\n  process.env.TRACE_TARGET && process.env.TRACE_TARGET in TARGET\n    ? TARGET[process.env.TRACE_TARGET as TARGET]\n    : TARGET.TELEMETRY\n\nif (process.env.TRACE_TARGET && !target) {\n  console.info(\n    'For TRACE_TARGET, please specify one of: CONSOLE, ZIPKIN, TELEMETRY'\n  )\n}\n\nexport let report: Reporter\nif (target === TARGET.CONSOLE) {\n  report = reportToConsole\n} else if (target === TARGET.ZIPKIN) {\n  report = reportToZipkin\n} else {\n  report = reportToTelemetry\n}\n"],"names":[],"mappings":";;;;;AAA+B,GAAW,CAAX,OAAW;AACd,GAAc,CAAd,UAAc;AACf,GAAa,CAAb,SAAa;AACV,GAAgB,CAAhB,YAAgB;;;;;;AAW9C,KAAK,CAAC,MAAM,GACV,OAAO,CAAC,GAAG,CAAC,YAAY,IAAI,OAAO,CAAC,GAAG,CAAC,YAAY,IAfvB,OAAW,UAAX,OAAW,QAgB7B,OAAO,CAAC,GAAG,CAAC,YAAY,IAhBN,OAAW,QAiB7B,SAAS;AAEtB,EAAE,EAAE,OAAO,CAAC,GAAG,CAAC,YAAY,KAAK,MAAM,EAAE,CAAC;IACxC,OAAO,CAAC,IAAI,EACV,mEAAqE;AAEzE,CAAC;AAEM,GAAG,CAAC,MAAM;QAAN,MAAM,GAAN,MAAM;AACjB,EAAE,EAAE,MAAM,KA1BqB,OAAW,QA0BpB,OAAO,EAAE,CAAC;qBAC9B,MAAM,GA1BoB,UAAc;AA2B1C,CAAC,MAAM,EAAE,EAAE,MAAM,KA5Bc,OAAW,QA4Bb,MAAM,EAAE,CAAC;qBACpC,MAAM,GA3BmB,SAAa;AA4BxC,CAAC,MAAM,CAAC;qBACN,MAAM,GA5BsB,YAAgB;AA6B9C,CAAC"}